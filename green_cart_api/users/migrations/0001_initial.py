# Generated by Django 5.2.7 on 2025-10-02 22:53

import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this instance.', primary_key=True, serialize=False)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Optional extra metadata stored as JSON.', null=True)),
                ('first_name', models.CharField(help_text="User's first name.", max_length=100)),
                ('last_name', models.CharField(help_text="User's last name.", max_length=100)),
                ('email', models.EmailField(help_text='Unique user email address.', max_length=254, unique=True)),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user is an admin.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this instance.', primary_key=True, serialize=False)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Optional extra metadata stored as JSON.', null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], help_text="User's gender", max_length=25, null=True)),
                ('phone_number', models.CharField(blank=True, help_text="User's phone number", max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('avatar', models.ImageField(blank=True, help_text="User's profile picture", null=True, upload_to='avatars/')),
                ('newsletter_subscription', models.BooleanField(default=True, help_text='Whether the user is subscribed to newsletter')),
                ('marketing_emails', models.BooleanField(default=True, help_text='Whether the user accepts marketing emails')),
                ('bio', models.TextField(blank=True, help_text="User's biography", null=True)),
                ('website', models.URLField(blank=True, help_text="User's website", null=True)),
                ('user', models.OneToOneField(help_text='User associated with this profile', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this instance.', primary_key=True, serialize=False)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Optional extra metadata stored as JSON.', null=True)),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('other', 'Other')], default='home', help_text='Type of address', max_length=10)),
                ('full_name', models.CharField(help_text='Full name for shipping', max_length=255)),
                ('phone_number', models.CharField(help_text='Phone number for shipping', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address_line_1', models.CharField(help_text='Address line 1 (street address, P.O. box)', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Address line 2', max_length=255, null=True)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province/Region', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal code', max_length=20)),
                ('country', models.CharField(default='United States', help_text='Country', max_length=100)),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default shipping address')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this address is active')),
                ('user', models.ForeignKey(help_text='User who owns this address', on_delete=django.db.models.deletion.CASCADE, related_name='shipping_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Address',
                'verbose_name_plural': 'Shipping Addresses',
                'ordering': ['-is_default', '-created'],
                'unique_together': {('user', 'address_line_1', 'postal_code')},
            },
        ),
    ]
